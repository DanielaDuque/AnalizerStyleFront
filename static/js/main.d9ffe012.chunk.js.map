{"version":3,"sources":["logo2.png","exito2.png","componentes/parameters.js","componentes/sugerencia.js","App.js","reportWebVitals.js","index.js"],"names":["Parameters","className","id","type","aria-describedby","placeholder","aria-label","onChange","e","props","setmaxLinesByFuntion","target","value","setComplejidad","setmaxCaracterByFuntion","setminLineComment","setmaxLineComment","setmaxFuntionByClass","setmaxClass","Component","aplicarbutton","hasCorr","correctText","prevCode","correctedCode","onClick","Sugerencia","error","ln","linea","col","style","height","sugerencia","textOutput","crearArchivo","console","log","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","App","state","minLineComment","Complejidad","maxCaracterByFuntion","maxLinesByFuntion","maxLineComment","maxClass","maxFuntionByClass","sugerencias","textInput","image","setText","param","setState","seterror","parseInt","setSugerencias","setImage","postRequest","vAttributes","complexity","minCommentedLinesCount","maxNameLength","maxLineCountByFunction","maxCommentedLinesCount","maxClassesByFile","maxFunctionCountByClass","text","ops","method","headers","data","JSON","stringify","url","process","axios","then","res","length","catch","alert","message","prev","correct","newtext","replaceAll","aceEditorRef","editor","setValue","table","this","map","index","push","errorMessage","suggestion","line","column","hasCorrection","previousCode","alt","src","logo2","width","mode","theme","ref","c","code","exito2","paddingRight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9ffe012.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo2.d374c080.png\";","export default __webpack_public_path__ + \"static/media/exito2.fa8b7235.png\";","import React from 'react';\r\nimport { Component } from 'react';\r\nimport '../estilos/general.css';\r\n\r\nclass Parameters extends Component {\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row justify-content-around align-items-center'>\r\n          <div className='columna col-lg-2 col-md-5 col-sm-12'>\r\n            <div className='row'>\r\n              <div className='input-group mb-3'>\r\n                <div className='input-group-prepend'>\r\n                  <span className='input-group-text' id='basic-addon3'>\r\n                    #\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type='number'\r\n                  className='form-control'\r\n                  id='LinasF'\r\n                  aria-describedby='basic-addon3'\r\n                  placeholder='Lineas por funcion'\r\n                  aria-label='LinasF'\r\n                  onChange={(e) => {\r\n                    this.props.setmaxLinesByFuntion(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='columna col-lg-3 col-md-5 col-sm-12'>\r\n            <div className='row'>\r\n              <div className='input-group mb-3'>\r\n                <div className='input-group-prepend'>\r\n                  <span className='input-group-text' id='basic-addon3'>\r\n                    #\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type='number'\r\n                  className='form-control'\r\n                  id='Ambitos'\r\n                  aria-describedby='basic-addon3'\r\n                  placeholder='Ambitos anidados'\r\n                  aria-label='Ambitos'\r\n                  onChange={(e) => {\r\n                    this.props.setComplejidad(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='input-group mb-3'>\r\n                <div className='input-group-prepend'>\r\n                  <span className='input-group-text' id='basic-addon3'>\r\n                    #\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type='number'\r\n                  className='form-control'\r\n                  id='Caracteres'\r\n                  aria-describedby='basic-addon3'\r\n                  placeholder='Caracteres por nombre'\r\n                  aria-label='Caracteres'\r\n                  onChange={(e) => {\r\n                    this.props.setmaxCaracterByFuntion(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='columna col-lg-3 col-md-5 col-sm-12'>\r\n            <div className='row'>\r\n              <div className='input-group mb-3'>\r\n                <div className='input-group-prepend'>\r\n                  <span className='input-group-text' id='basic-addon3'>\r\n                    #\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type='number'\r\n                  className='form-control'\r\n                  id='MinLineasC'\r\n                  aria-describedby='basic-addon3'\r\n                  placeholder='Min lineas comentadas'\r\n                  aria-label='MinLineasC'\r\n                  onChange={(e) => {\r\n                    this.props.setminLineComment(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='input-group mb-3'>\r\n                <div className='input-group-prepend'>\r\n                  <span className='input-group-text' id='basic-addon3'>\r\n                    #\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type='number'\r\n                  className='form-control'\r\n                  id='MaxLineasC'\r\n                  aria-describedby='basic-addon3'\r\n                  placeholder='Max lineas comentadas'\r\n                  aria-label='MaxLineasC'\r\n                  onChange={(e) => {\r\n                    this.props.setmaxLineComment(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='columna col-lg-3 col-md-5 col-sm-12'>\r\n            <div className='row'>\r\n              <div className='input-group mb-3'>\r\n                <div className='input-group-prepend'>\r\n                  <span className='input-group-text' id='basic-addon3'>\r\n                    #\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type='number'\r\n                  className='form-control'\r\n                  id='Funciones'\r\n                  aria-describedby='basic-addon3'\r\n                  placeholder='Funciones por clase'\r\n                  aria-label='Funciones'\r\n                  onChange={(e) => {\r\n                    this.props.setmaxFuntionByClass(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='input-group mb-3'>\r\n                <div className='input-group-prepend'>\r\n                  <span className='input-group-text' id='basic-addon3'>\r\n                    #\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type='number'\r\n                  className='form-control'\r\n                  id='Clases'\r\n                  aria-describedby='basic-addon3'\r\n                  placeholder='Clases por archivo'\r\n                  aria-label='Clases'\r\n                  onChange={(e) => {\r\n                    this.props.setmaxClass(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Parameters;\r\n","import React from 'react';\r\nimport '../estilos/general.css';\r\nimport '../estilos/palette.css';\r\n\r\nconst aplicarbutton = (hasCorr, correctText, prevCode, correctedCode) => {\r\n  if (hasCorr) {\r\n    return (\r\n      <button\r\n        className='btn button-color-ouline button-card'\r\n        id='Aplicar'\r\n        onClick={() => {\r\n          correctText(prevCode, correctedCode);\r\n        }}\r\n      >\r\n        Aplicar en el codigo\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nconst crearArchivo = (error, linea, col, sugerencia) => {\r\n  return `\r\n    -----------------------------\r\n    -----------------------------\r\n    ${sugerencia}\r\n    -----------------------------\r\n    Line: ${linea}\\t Column: ${col}\r\n    -----------------------------\r\n    -----------------------------\r\n    `;\r\n};\r\n\r\nconst subtitle = (ln, col) => {\r\n  return `Linea: ${ln} - Columna: ${col}`;\r\n};\r\nexport default function Sugerencia(props) {\r\n  return (\r\n    <div className='card shadow p-3 mb-5 bg-white rounded'>\r\n      <h4 className='card-header '>{props.error}</h4>\r\n      <div className='card-body'>\r\n        <div className='container'>\r\n          <div className='row justify-content-start card-subtitle mb-2 text-muted text-left '>\r\n            <h6>{subtitle(props.linea, props.col)}</h6>\r\n          </div>\r\n        </div>\r\n        <p className='card-text overflow-hidden' style={{ height: '50px' }}>\r\n          {props.sugerencia}\r\n        </p>\r\n        <div className='row'>\r\n          <button\r\n            type='button'\r\n            className='btn button-color button-card'\r\n            onClick={() => {\r\n              let textOutput = crearArchivo(\r\n                props.error,\r\n                props.linea,\r\n                props.col,\r\n                props.sugerencia\r\n              );\r\n              console.log(textOutput);\r\n              const element = document.createElement('a');\r\n              const file = new Blob([textOutput], {\r\n                type: 'text/plain;charset=utf-8',\r\n              });\r\n              element.href = URL.createObjectURL(file);\r\n              element.download = 'sugerencia.txt';\r\n              document.body.appendChild(element);\r\n              element.click();\r\n            }}\r\n          >\r\n            Descargar\r\n          </button>\r\n\r\n          {aplicarbutton(\r\n            props.hasCorr,\r\n            props.correctText,\r\n            props.prevCode,\r\n            props.correctedCode\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport AceEditor from 'react-ace';\r\nimport 'brace/mode/java';\r\nimport 'brace/theme/monokai';\r\n\r\nimport './estilos/palette.css';\r\nimport './App.css';\r\n\r\nimport logo2 from './logo2.png';\r\nimport exito2 from './exito2.png';\r\n\r\nimport Parameters from './componentes/parameters';\r\nimport Sugerencia from './componentes/sugerencia';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    minLineComment: 0,\r\n    Complejidad: 0,\r\n    maxCaracterByFuntion: 0,\r\n    maxLinesByFuntion: 0,\r\n    maxLineComment: 0,\r\n    maxClass: 0,\r\n    maxFuntionByClass: 0,\r\n    sugerencias: [],\r\n    textInput: '',\r\n    error: false,\r\n    image: false,\r\n  };\r\n\r\n  setText = (param) => {\r\n    this.setState({\r\n      textInput: param,\r\n    });\r\n  };\r\n  seterror = (param) => {\r\n    this.setState({\r\n      error: param,\r\n    });\r\n  };\r\n  setminLineComment = (param) => {\r\n    this.setState({\r\n      minLineComment: param,\r\n    });\r\n  };\r\n\r\n  setComplejidad = (param) => {\r\n    param = parseInt(param);\r\n    this.setState({\r\n      Complejidad: param,\r\n    });\r\n  };\r\n\r\n  setmaxCaracterByFuntion = (param) => {\r\n    param = parseInt(param);\r\n    this.setState({\r\n      maxCaracterByFuntion: param,\r\n    });\r\n  };\r\n\r\n  setmaxLinesByFuntion = (param) => {\r\n    param = parseInt(param);\r\n    this.setState({\r\n      maxLinesByFuntion: param,\r\n    });\r\n  };\r\n\r\n  setmaxLineComment = (param) => {\r\n    param = parseInt(param);\r\n    this.setState({\r\n      maxLineComment: param,\r\n    });\r\n  };\r\n\r\n  setmaxClass = (param) => {\r\n    param = parseInt(param);\r\n    this.setState({\r\n      maxClass: param,\r\n    });\r\n  };\r\n\r\n  setmaxFuntionByClass = (param) => {\r\n    param = parseInt(param);\r\n    this.setState({\r\n      maxFuntionByClass: param,\r\n    });\r\n  };\r\n  setSugerencias = (param) => {\r\n    this.setState({\r\n      sugerencias: param,\r\n    });\r\n    //console.log(this.state)\r\n  };\r\n\r\n  setImage = (param) => {\r\n    this.setState({\r\n      image: param,\r\n    });\r\n    //console.log(this.state)\r\n  };\r\n\r\n  postRequest = () => {\r\n    const deptsURL = process.env.REACT_APP_API_URL;\r\n    var vAttributes = {\r\n      complexity: this.state.Complejidad,\r\n      minCommentedLinesCount: this.state.minLineComment,\r\n      maxNameLength: this.state.maxCaracterByFuntion,\r\n      maxLineCountByFunction: this.state.maxLinesByFuntion,\r\n      maxCommentedLinesCount: this.state.maxLineComment,\r\n      maxClassesByFile: this.state.maxClass,\r\n      maxFunctionCountByClass: this.state.maxFuntionByClass,\r\n      text: this.state.textInput,\r\n    };\r\n\r\n    const ops = {\r\n      method: 'POST',\r\n      headers: { 'content-type': 'application/json' },\r\n      data: JSON.stringify(vAttributes),\r\n      url: deptsURL,\r\n    };\r\n\r\n    axios(ops)\r\n      .then((res) => {\r\n        console.log('res.data');\r\n        console.log(res);\r\n        if (res.data.length === 0) {\r\n          this.setImage(true); //muestra imagen\r\n        } else {\r\n          this.setImage(false);\r\n        }\r\n        this.setSugerencias(res.data);\r\n      })\r\n      .catch((error) => {\r\n        alert('There was an error ' + error.message);\r\n        console.log('error.data');\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  correctText = (prev, correct) => {\r\n    let text = this.state.textInput;\r\n    let newtext = text.replaceAll(prev, correct);\r\n    this.aceEditorRef.editor.setValue(newtext);\r\n    this.setState({\r\n      textInput: newtext,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let table = [];\r\n\r\n    this.state.sugerencias.map((data, index) => {\r\n      //console.log(data)\r\n      table.push(\r\n        <Sugerencia\r\n          key={index}\r\n          error={data.errorMessage}\r\n          sugerencia={data.suggestion}\r\n          linea={data.line}\r\n          col={data.column}\r\n          hasCorr={data.hasCorrection}\r\n          prevCode={data.previousCode}\r\n          correctedCode={data.correctedCode}\r\n          correctText={this.correctText}\r\n        />\r\n      );\r\n\r\n      return null;\r\n    });\r\n    return (\r\n      <div>\r\n        <header>\r\n          <nav className='navbar navbar-light'>\r\n            <img\r\n              alt='Brand'\r\n              src={logo2}\r\n              className='navbar-brand mx-auto d-block img-fluid'\r\n              width='500px'\r\n            ></img>\r\n          </nav>\r\n        </header>\r\n        <section>\r\n          <div className='container columna'>\r\n            <h2 className='cont font-change'>Parámetros personalizables</h2>\r\n            <Parameters\r\n              setminLineComment={this.setminLineComment}\r\n              setComplejidad={this.setComplejidad}\r\n              setmaxCaracterByFuntion={this.setmaxCaracterByFuntion}\r\n              setmaxLinesByFuntion={this.setmaxLinesByFuntion}\r\n              setmaxLineComment={this.setmaxLineComment}\r\n              setmaxClass={this.setmaxClass}\r\n              setmaxFuntionByClass={this.setmaxFuntionByClass}\r\n            ></Parameters>\r\n\r\n            <div className='row row justify-content-between'>\r\n              <div className='col-lg-6'>\r\n                <div className='text-button separe-items'>\r\n                  <div className=''>\r\n                    <h2 className='font-change'>Codigo</h2>\r\n                  </div>\r\n                  <div className=''>\r\n                    <button\r\n                      className='btn button-color'\r\n                      onClick={() => {\r\n                        // this.setSugerencias(prueba) //COMENTAR\r\n                        this.postRequest();\r\n                      }}\r\n                    >\r\n                      Analizar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='input-group'>\r\n                  <div className='input-group-prepend'>\r\n                    <span className='input-group-text'></span>\r\n                  </div>\r\n\r\n                  <AceEditor\r\n                    mode='javascript'\r\n                    theme='monokai'\r\n                    ref={(c) => (this.aceEditorRef = c)}\r\n                    onChange={(code) => {\r\n                      //console.log(code)\r\n                      this.setText(code);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-lg-5 contfin '>\r\n                <h2 className='font-change'>Sugerencias</h2>\r\n\r\n                {this.state.image ? (\r\n                  <img\r\n                    alt='exito'\r\n                    src={exito2}\r\n                    className='mx-auto d-block img-fluid'\r\n                    width='340px'\r\n                  ></img>\r\n                ) : (\r\n                  <div\r\n                    className='row row-cols-1 scroll'\r\n                    style={{ paddingRight: '15px' }}\r\n                  >\r\n                    {table}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <footer className='page-footer font-small blue footer-space'>\r\n          <div className='footer-copyright text-center py-3'>\r\n            <p> Lenguajes de Programación 2020-2</p>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}